# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  hardware.system76.enableAll = true;

  boot.initrd.availableKernelModules = [ 
    "xhci_pci" 
    "thunderbolt" 
    "nvme" 
    "usb_storage" 
    "usbhid" 
    "sd_mod" 
    "sdhci_pci" 
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/81891b4c-3d6a-43cc-ad57-8aa5ac244275";
      fsType = "ext4";
    };

  # Enable support for the YubiKey PBA
  boot.initrd.luks.yubikeySupport = true;

  boot.initrd.luks.devices = {
    "luks-1d79ed1e-831f-414f-b108-6ae2581018c8" = { 
      device = "/dev/disk/by-uuid/1d79ed1e-831f-414f-b108-6ae2581018c8";
      yubikey = {
        slot = 2;
        twoFactor = true;
        storage = {
          device = "/dev/disk/by-uuid/677C-995B";
        };
      };
    };
  };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/677C-995B";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/33fcdca1-2661-4071-a769-57ed4303bd8b"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
